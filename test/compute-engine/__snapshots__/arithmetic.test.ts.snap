// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
box       = ["Ln", 1.1]
N-auto    = 0.095310179804324860044
N-mach    = 0.09531017980432493
`;

exports[` 2`] = `
box       = ["Ln", 1]
N-auto    = 0
`;

exports[` 3`] = `
box       = ["Ln", 0]
N-auto    = {num: "-Infinity"}
`;

exports[` 4`] = `
box       = ["Ln", -1]
N-auto    = ["Complex", 0, 3.141592653589793]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0, 3.141592653589793]
`;

exports[` 5`] = `
box       = ["Ln", "Pi"]
N-auto    = 1.1447298858494001741
N-mach    = 1.1447298858494002
`;

exports[` 6`] = `
box       = ["Ln", ["Complex", 1.1, 1.1]]
N-auto    = ["Complex", 0.4418837700842976, 0.7853981633974483]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0.4418837700842976, 0.7853981633974483]
`;

exports[` 7`] = `
box       = ["Lb", 1.1]
N-auto    = 0.13750352374993502
`;

exports[` 8`] = `
box       = ["Lb", 1]
N-auto    = 0
`;

exports[` 9`] = `
box       = ["Lb", 0]
N-auto    = ComplexInfinity
N-big     = {num: "NaN"}
N-mach    = {num: "-Infinity"}
`;

exports[` 10`] = `
box       = ["Lb", -1]
N-auto    = {num: "NaN"}
N-cplx    = ["Complex", 0, 4.532360141827194]
`;

exports[` 11`] = `
box       = ["Lb", "Pi"]
N-auto    = 1.651496129472319
N-mach    = 1.6514961294723187
`;

exports[` 12`] = `
box       = ["Lb", ["Complex", 1.1, 1.1]]
N-auto    = ["Complex", 0.637503523749935, 1.1330900354567985]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0.637503523749935, 1.1330900354567985]
`;

exports[` 13`] = `
box       = ["Lg", 1.1]
N-auto    = 0.04139268515822504075
N-mach    = 0.04139268515822507
`;

exports[` 14`] = `
box       = ["Lg", 1]
N-auto    = 0
`;

exports[` 15`] = `
box       = ["Lg", 0]
N-auto    = {num: "-Infinity"}
`;

exports[` 16`] = `
box       = ["Lg", -1]
N-auto    = ["Complex", 0, 1.3643763538418412]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0, 1.3643763538418412]
`;

exports[` 17`] = `
box       = ["Lg", "Pi"]
N-auto    = 0.49714987269413385435
N-mach    = 0.4971498726941338
`;

exports[` 18`] = `
box       = ["Lg", ["Complex", 1.1, 1.1]]
N-auto    = ["Complex", 0.19190768299021566, 0.3410940884604603]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0.19190768299021566, 0.3410940884604603]
`;

exports[` 19`] = `
box       = ["Log", 1.1]
N-auto    = 0.04139268515822504075
N-mach    = 0.04139268515822507
`;

exports[` 20`] = `
box       = ["Log", 1]
N-auto    = 0
`;

exports[` 21`] = `
box       = ["Log", 0]
N-auto    = {num: "-Infinity"}
`;

exports[` 22`] = `
box       = ["Log", -1]
N-auto    = ["Complex", 0, 1.3643763538418412]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0, 1.3643763538418412]
`;

exports[` 23`] = `
box       = ["Log", "Pi"]
N-auto    = 0.49714987269413385435
N-mach    = 0.4971498726941338
`;

exports[` 24`] = `
box       = ["Log", ["Complex", 1.1, 1.1]]
N-auto    = ["Complex", 0.19190768299021566, 0.3410940884604603]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0.19190768299021566, 0.3410940884604603]
`;

exports[` 25`] = `
box       = ["Log", 1.1, 5]
N-auto    = 0.059219544331585022129
N-mach    = 0.05921954433158507
`;

exports[` 26`] = `
box       = ["Log", 1, 5]
N-auto    = 0
`;

exports[` 27`] = `
box       = ["Log", 0, 5]
N-auto    = {num: "-Infinity"}
`;

exports[` 28`] = `
box       = ["Log", -1, 5]
N-auto    = {num: "NaN"}
`;

exports[` 29`] = `
box       = ["Log", "Pi", 5]
N-auto    = 0.71126066871266895533
N-mach    = 0.711260668712669
`;

exports[` 30`] = `
box       = ["Log", ["Complex", 1.1, 1.1], 5]
N-auto    = ["Complex", 0.2745578233682816, 0.48799531645779287]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 0.2745578233682816, 0.48799531645779287]
`;

exports[` 31`] = `
box       = ["Ln"]
canonical = ["Ln", ["Error", "'missing'"]]
`;

exports[` 32`] = `
box       = ["Ln", "'string'"]
canonical = [
  "Ln",
  [
    "Error",
    [
      "ErrorCode",
      "'incompatible-domain'",
      ["Domain", "Numbers"],
      ["Domain", "Strings"]
    ],
    "'string'"
  ]
]
`;

exports[` 33`] = `
box       = ["Ln", 3, 4]
canonical = ["Ln", 3, ["Error", "'unexpected-argument'", 4]]
`;

exports[`ADD Add  1`] = `
latex     = [
  "Add",
  2,
  4,
  1.5,
  1.7,
  ["Rational", 5, 7],
  ["Rational", 3, 11],
  ["Sqrt", 5],
  "Pi",
  ["Sqrt", 5],
  ["Sqrt", 4]
]
box       = [
  "Add",
  "Pi",
  ["Sqrt", 5],
  ["Sqrt", 5],
  ["Rational", 3, 11],
  ["Rational", 5, 7],
  1.5,
  1.7,
  2,
  2,
  4
]
simplify  = ["Add", ["Multiply", ["Sqrt", 5], 2], "Pi", 3.2, ["Rational", 692, 77]]
evaluate  = 19.800741595602359644
eval-mach = 19.80074159560236
`;

exports[`ADD Add '\\frac{2}{3}+\\frac{12345678912345678}{987654321987654321}+\\frac{987654321987654321}{12345678912345678}' 1`] = `
latex     = [
  "Add",
  ["Rational", 2, 3],
  ["Rational", "12345678912345678", "987654321987654321"],
  ["Rational", "987654321987654321", "12345678912345678"]
]
box       = [
  "Add",
  ["Rational", 1371742101371742, "109739369109739369"],
  ["Rational", 2, 3],
  ["Rational", "109739369109739369", 1371742101371742]
]
simplify  = [
  "Rational",
  "12144966884186830401015120518973257",
  "150534112785803114146067001510798"
]
N-auto    = 80.679167395552772882
N-mach    = 80.67916739555278
`;

exports[`ADD Add ['Add', 2.5, -1.1, 18.4] 1`] = `19.8`;

exports[`ADD Add ['Add', 2.5, -1.1] 1`] = `1.4`;

exports[`ADD Add ['Add', 2.5] 1`] = `2.5`;

exports[`ADD Add ['Add'] 1`] = `0`;

exports[`ADD Add \\frac{2}{-3222233}+\\frac{1}{3} 1`] = `
latex     = ["Add", ["Divide", 2, -3222233], ["Rational", 1, 3]]
box       = ["Subtract", ["Rational", 1, 3], ["Rational", 2, 3222233]]
simplify  = ["Rational", 3222227, 9666699]
N-auto    = 0.33333271264575425386
N-mach    = 0.33333271264575426
`;

exports[`CONSTANTS CatalanConstant 1`] = `
box       = CatalanConstant
N-auto    = 0.91596559417721901505
N-mach    = 0.915965594177219
`;

exports[`CONSTANTS EulerGamma 1`] = `
box       = EulerGamma
N-auto    = 0.57721566490153286061
N-mach    = 0.5772156649015329
`;

exports[`CONSTANTS ExponentialE 1`] = `
box       = ExponentialE
N-auto    = 2.7182818284590452354
N-mach    = 2.718281828459045
`;

exports[`CONSTANTS GoldenRatio 1`] = `
box       = GoldenRatio
simplify  = ["Add", ["Divide", ["Sqrt", 5], 2], "Half"]
evaluate  = ["Divide", ["Add", ["Sqrt", 5], 1], 2]
N-auto    = 1.6180339887498948482
N-mach    = 1.618033988749895
`;

exports[`CONSTANTS ImaginaryUnit 1`] = `
box       = ImaginaryUnit
evaluate  = ["Complex", 0, 1]
eval-big  = {num: "NaN"}
eval-mach = {num: "NaN"}
eval-cplx = ["Complex", 0, 1]
`;

exports[`CONSTANTS MachineEpsilon 1`] = `
box       = MachineEpsilon
N-auto    = 2.220446049250313e-16
`;

exports[`Divide Divide 1`] = `2`;

exports[`Divide Divide 2`] = `2.(27)`;

exports[`Divide INVALID  Divide 1`] = `["Divide", 2.5, ["Error", "'missing'"]]`;

exports[`Divide INVALID Divide 1`] = `["Divide", 2.5, -1.1, ["Error", "'unexpected-argument'", 18.4]]`;

exports[`EXACT EVALUATION Add: All exact 1`] = `
latex     = ["Add", 6, ["Rational", 10, 14], ["Sqrt", ["Rational", 18, 9]]]
box       = ["Add", ["Sqrt", 2], ["Rational", 5, 7], 6]
simplify  = ["Add", ["Sqrt", 2], ["Rational", 47, 7]]
N-auto    = 8.1284992766588093345
N-mach    = 8.12849927665881
`;

exports[`EXACT EVALUATION Add: All exact 2`] = `
latex     = ["Add", 6, ["Sqrt", 2], ["Sqrt", 5]]
box       = ["Add", ["Sqrt", 2], ["Sqrt", 5], 6]
N-auto    = 9.6502815398728847452
N-mach    = 9.650281539872886
`;

exports[`EXACT EVALUATION Add: All exact 3`] = `
latex     = [
  "Add",
  2,
  5,
  ["Rational", 5, 7],
  ["Rational", 7, 9],
  ["Sqrt", 2],
  "Pi"
]
box       = [
  "Add",
  "Pi",
  ["Sqrt", 2],
  ["Rational", 5, 7],
  ["Rational", 7, 9],
  2,
  5
]
simplify  = ["Add", "Pi", ["Sqrt", 2], ["Rational", 535, 63]]
N-auto    = 13.047869708026380351
N-mach    = 13.04786970802638
`;

exports[`EXACT EVALUATION Add: one inexact 1`] = `
latex     = [
  "Add",
  1.1,
  2,
  5,
  ["Rational", 5, 7],
  ["Rational", 7, 9],
  ["Sqrt", 2],
  "Pi"
]
box       = [
  "Add",
  "Pi",
  ["Sqrt", 2],
  ["Rational", 5, 7],
  ["Rational", 7, 9],
  1.1,
  2,
  5
]
simplify  = ["Add", "Pi", ["Sqrt", 2], 1.1, ["Rational", 535, 63]]
evaluate  = 14.147869708026380351
eval-mach = 14.14786970802638
`;

exports[`EXACT EVALUATION Cos: Exact integer 1`] = `
latex     = ["Cos", 5]
box       = ["Cos", 5]
N-auto    = 0.28366218546322626447
N-mach    = 0.28366218546322625
`;

exports[`EXACT EVALUATION Cos: Exact rational 1`] = `
latex     = ["Cos", ["Rational", 5, 7]]
box       = ["Cos", ["Rational", 5, 7]]
N-auto    = 0.75556134670069659847
N-mach    = 0.7555613467006966
`;

exports[`EXACT EVALUATION Cos: Inexact Fractional part 1`] = `
latex     = ["Cos", 5.1]
box       = ["Cos", 5.1]
evaluate  = 0.37797774271298056332
eval-mach = 0.37797774271298024
`;

exports[`EXACT EVALUATION Cos: Pi (simplify constructible value) 1`] = `
latex     = ["Cos", "Pi"]
box       = ["Cos", "Pi"]
simplify  = -1
`;

exports[`EXACT EVALUATION Sqrt: Exact integer 1`] = `
latex     = ["Sqrt", 5]
box       = ["Sqrt", 5]
N-auto    = 2.2360679774997896964
N-mach    = 2.23606797749979
`;

exports[`EXACT EVALUATION Sqrt: Exact rational 1`] = `
latex     = ["Sqrt", ["Rational", 5, 7]]
box       = ["Sqrt", ["Rational", 5, 7]]
N-auto    = 0.84515425472851657751
N-mach    = 0.8451542547285166
`;

exports[`EXACT EVALUATION Sqrt: Inexact Fractional part 1`] = `
latex     = ["Sqrt", 5.1]
box       = ["Sqrt", 5.1]
evaluate  = 2.258317958127242985
eval-mach = 2.258317958127243
`;

exports[`INVALID NEGATE INVALID Negate 1`] = `["Negate", 2.5, ["Error", "'unexpected-argument'", 1.1]]`;

exports[`INVALID NEGATE INVALID Negate 2`] = `
[
  "Negate",
  2.5,
  ["Error", "'unexpected-argument'", -1.1],
  ["Error", "'unexpected-argument'", 18.4]
]
`;

exports[`INVALID ROOT Too few args 1`] = `["Root", 2.5, ["Error", "'missing'"]]`;

exports[`INVALID ROOT Too many args 1`] = `["Root", 2.5, -1.1, ["Error", "'unexpected-argument'", 18.4]]`;

exports[`MULTIPLY 2x(-2/3) 1`] = `
box       = ["Multiply", 2, ["Rational", -2, 3]]
canonical = ["Rational", -4, 3]
N-auto    = -1.(3)
N-mach    = -1.3333333333333333
`;

exports[`MULTIPLY 2x(1+1.1i) 1`] = `
box       = ["Multiply", 2, ["Complex", 1, 1.1]]
evaluate  = ["Complex", 2, 2.2]
eval-big  = {num: "NaN"}
eval-mach = {num: "NaN"}
eval-cplx = ["Complex", 2, 2.2]
`;

exports[`MULTIPLY 2x(1+i) 1`] = `
box       = ["Multiply", 2, ["Complex", 1, 1]]
N-auto    = ["Complex", 2, 2]
N-big     = {num: "NaN"}
N-cplx    = ["Complex", 2, 2]
`;

exports[`MULTIPLY 2x(1.1+1.1i) 1`] = `
box       = ["Multiply", 2, ["Complex", 1.1, 1.1]]
evaluate  = ["Complex", 2.2, 2.2]
eval-big  = {num: "NaN"}
eval-mach = {num: "NaN"}
eval-cplx = ["Complex", 2.2, 2.2]
`;

exports[`MULTIPLY 2x(1.1+i) 1`] = `
box       = ["Multiply", 2, ["Complex", 1.1, 1]]
evaluate  = ["Complex", 2.2, 2]
eval-big  = {num: "NaN"}
eval-mach = {num: "NaN"}
eval-cplx = ["Complex", 2.2, 2]
`;

exports[`MULTIPLY 2x(1.1i) 1`] = `
box       = ["Multiply", 2, ["Complex", 0, 1.1]]
evaluate  = ["Complex", 0, 2.2]
eval-big  = {num: "NaN"}
eval-mach = {num: "NaN"}
eval-cplx = ["Complex", 0, 2.2]
`;

exports[`MULTIPLY 2x(2/3) 1`] = `
box       = ["Multiply", 2, ["Rational", 2, 3]]
canonical = ["Rational", 4, 3]
N-auto    = 1.(3)
N-mach    = 1.3333333333333333
`;

exports[`MULTIPLY 2x(1234567890987654321/3) 1`] = `
box       = ["Multiply", 2, ["Rational", "1234567890987654321", 3]]
canonical = 823045260658436214
`;

exports[`MULTIPLY 2x-1234567890987654321.123456789 1`] = `
box       = ["Multiply", 2, "1234567890987654321.1"]
evaluate  = 2469135781975308642.2
eval-mach = 2469135781975309000
`;

exports[`MULTIPLY 2x1234567890987654321 1`] = `
box       = ["Multiply", 2, "1234567890987654321"]
canonical = 2469135781975308642
`;

exports[`MULTIPLY 5x(-2.1) 1`] = `
box       = ["Multiply", 5, -2.1]
canonical = ["Multiply", -5, 2.1]
evaluate  = -10.5
`;

exports[`MULTIPLY 5x2 1`] = `
box       = ["Multiply", 5, 2]
canonical = 10
`;

exports[`MULTIPLY Multiply 1`] = `
box       = ["Multiply", 2.5]
canonical = 2.5
`;

exports[`MULTIPLY Multiply 2`] = `
box       = ["Multiply", 2.5, 1.1]
canonical = 2.75
`;

exports[`MULTIPLY Multiply 3`] = `
box       = ["Multiply", 2.5, -1.1, 18.4]
canonical = -50.6
evaluate  = -50.6
eval-mach = -50.599999999999994
`;

exports[`MULTIPLY Multiply: All exact 1`] = `
latex     = ["Multiply", 2, ["Rational", 5, 7], ["Rational", 7, 9]]
box       = ["Rational", 10, 9]
N-auto    = 1.(1)
N-mach    = 1.1111111111111112
`;

exports[`MULTIPLY Multiply: All exact 2`] = `
latex     = [
  "Multiply",
  2,
  5,
  ["Rational", 5, 7],
  ["Rational", 7, 9],
  ["Sqrt", 2],
  "Pi"
]
box       = ["Multiply", "Pi", ["Sqrt", 2], ["Rational", 50, 9]]
canonical = ["Multiply", ["Sqrt", 2], ["Rational", 50, 9], "Pi"]
evaluate  = ["Multiply", "Pi", ["Sqrt", 2], ["Rational", 50, 9]]
N-auto    = 24.682682989768701372
N-mach    = 24.6826829897687
`;

exports[`MULTIPLY Multiply: One inexact 1`] = `
latex     = [
  "Multiply",
  1.1,
  2,
  5,
  ["Rational", 5, 7],
  ["Rational", 7, 9],
  ["Sqrt", 2],
  "Pi"
]
box       = ["Multiply", "Pi", ["Sqrt", 2], 1.1, ["Rational", 50, 9]]
canonical = ["Multiply", ["Sqrt", 2], 1.1, ["Rational", 50, 9], "Pi"]
evaluate  = 27.15095128874557151
eval-mach = 27.15095128874557
`;

exports[`MULTIPLY with +Infinity 1`] = `
box       = ["Multiply", "x", -2, 3.1, {num: "+Infinity"}]
canonical = ["Multiply", -2, 3.1, {num: "+Infinity"}, "x"]
evaluate  = {num: "+Infinity"}
`;

exports[`MULTIPLY with <0 1`] = `
box       = ["Multiply", "x", -2, 3.1, -5.2]
canonical = ["Multiply", 2, 16.12, "x"]
evaluate  = ["Multiply", 32.24, "x"]
`;

exports[`MULTIPLY with -Infinity 1`] = `
box       = ["Multiply", "x", -2, 3.1, {num: "-Infinity"}]
canonical = ["Multiply", 2, 3.1, {num: "+Infinity"}, "x"]
evaluate  = {num: "+Infinity"}
`;

exports[`MULTIPLY with -Infinity and +Infinity 1`] = `
box       = ["Multiply", "x", -2, 3.1, {num: "-Infinity"}, {num: "+Infinity"}]
canonical = ["Multiply", 2, 3.1, {num: "+Infinity"}, "x"]
evaluate  = {num: "+Infinity"}
`;

exports[`MULTIPLY with NaN 1`] = `
box       = ["Multiply", "x", 2, 3.1, {num: "NaN"}]
canonical = {num: "NaN"}
`;

exports[`MULTIPLY with zero 1`] = `
box       = ["Multiply", "x", 2, 3.1, 0]
canonical = 0
`;

exports[`Max Max 1`] = `
box       = ["Max", 2.5]
simplify  = 2.5
`;

exports[`Max Max 2`] = `
box       = ["Max", 2.5, 1.1]
evaluate  = 2.5
`;

exports[`Max Max 3`] = `
box       = ["Max", 2.5, -1.1, 18.4]
evaluate  = 18.4
`;

exports[`Max Max 4`] = `
box       = ["Max", 2.5, -1.1, {num: "NaN"}, 18.4]
evaluate  = 18.4
`;

exports[`Max Max 5`] = `
box       = ["Max", 2.5, -1.1, "foo", 18.4]
evaluate  = 18.4
`;

exports[`Max Max 6`] = `
box       = ["Max", "foo", "bar"]
evaluate  = foo
`;

exports[`Min Min 1`] = `
box       = ["Min", 2.5]
simplify  = 2.5
`;

exports[`Min Min 2`] = `
box       = ["Min", 2.5, 1.1]
evaluate  = 1.1
`;

exports[`Min Min 3`] = `
box       = ["Min", 2.5, -1.1, 18.4]
evaluate  = -1.1
`;

exports[`Min Min 4`] = `
box       = ["Min", 2.5, -1.1, {num: "NaN"}, 18.4]
evaluate  = -1.1
`;

exports[`Min Min 5`] = `
box       = ["Min", 2.5, -1.1, "foo", 18.4]
evaluate  = -1.1
`;

exports[`Min Min 6`] = `
box       = ["Min", "foo", "bar"]
evaluate  = foo
`;

exports[`NEGATE -(+Infinity) 1`] = `{num: "-Infinity"}`;

exports[`NEGATE -(-2.1) 1`] = `2`;

exports[`NEGATE -(-2/3) 1`] = `
box       = ["Rational", 2, 3]
N-auto    = 0.(6)
N-mach    = 0.6666666666666666
`;

exports[`NEGATE -(-Infinity) 1`] = `{num: "+Infinity"}`;

exports[`NEGATE -(1+1.1i) 1`] = `["Complex", -1, -1.1]`;

exports[`NEGATE -(1+i) 1`] = `["Complex", -1, -1]`;

exports[`NEGATE -(1.1+1.1i) 1`] = `["Complex", -1.1, -1.1]`;

exports[`NEGATE -(1.1+i) 1`] = `["Complex", -1.1, -1]`;

exports[`NEGATE -(1.1i) 1`] = `["Complex", 0, -1.1]`;

exports[`NEGATE -(2/3) 1`] = `
box       = ["Rational", -2, 3]
N-auto    = -0.(6)
N-mach    = -0.6666666666666666
`;

exports[`NEGATE -(1234567890987654321/3) 1`] = `-411522630329218107`;

exports[`NEGATE -0 1`] = `0`;

exports[`NEGATE -2 1`] = `-2`;

exports[`NEGATE -2.5 1`] = `-2.5`;

exports[`NEGATE -1234567890987654321 1`] = `-1234567890987654321`;

exports[`NEGATE -1234567890987654321.123456789 1`] = `-1234567890987654321.1`;

exports[`NEGATE -NaN 1`] = `{num: "NaN"}`;

exports[`Power INVALID Power 1`] = `["Power", 2.5, ["Error", "'missing'"]]`;

exports[`Power INVALID Power 2`] = `["Power", 2.5, -1.1, ["Error", "'unexpected-argument'", 18.4]]`;

exports[`Power Power 1`] = `2.7398955659630432724`;

exports[`Power Power 2`] = `0.064`;

exports[`Power Power 3`] = `0.053283405273719880987`;

exports[`RELATIONAL OPERATOR Equal 1`] = `True`;

exports[`RELATIONAL OPERATOR Equal 2`] = `False`;

exports[`RELATIONAL OPERATOR Greater 1`] = `False`;

exports[`RELATIONAL OPERATOR Greater 2`] = `True`;

exports[`RELATIONAL OPERATOR GreaterEqual 1`] = `True`;

exports[`RELATIONAL OPERATOR GreaterEqual 2`] = `False`;

exports[`RELATIONAL OPERATOR GreaterEqual 3`] = `True`;

exports[`RELATIONAL OPERATOR Less 1`] = `True`;

exports[`RELATIONAL OPERATOR Less 2`] = `False`;

exports[`RELATIONAL OPERATOR LessEqual 1`] = `True`;

exports[`RELATIONAL OPERATOR LessEqual 2`] = `True`;

exports[`RELATIONAL OPERATOR LessEqual 3`] = `False`;

exports[`RELATIONAL OPERATOR NotEqual 1`] = `False`;

exports[`RELATIONAL OPERATOR NotEqual 2`] = `True`;

exports[`Rational Bignum rational 1`] = `
box       = ["Rational", "12345678901234567890", "23456789012345678901"]
canonical = ["Rational", 137174210, 260630989]
N-auto    = 0.52631580966759098627
N-mach    = 0.526315809667591
`;

exports[`Rational INVALID Rational 1`] = `
box       = ["Rational", 2.5, -1.1, 18.4]
canonical = [
  "Rational",
  [
    "Error",
    [
      "ErrorCode",
      "'incompatible-domain'",
      ["Domain", "Integers"],
      ["Domain", "PositiveNumbers"]
    ],
    2.5
  ],
  [
    "Error",
    [
      "ErrorCode",
      "'incompatible-domain'",
      ["Domain", "Integers"],
      ["Domain", "NegativeNumbers"]
    ],
    -1.1
  ],
  ["Error", "'unexpected-argument'", 18.4]
]
`;

exports[`Rational INVALID Rational 2`] = `
box       = ["Rational", 2, 3, 5]
canonical = ["Rational", 2, 3, ["Error", "'unexpected-argument'", 5]]
`;

exports[`Rational Rational 1`] = `
box       = ["Rational", 3, 4]
N-auto    = 0.75
`;

exports[`Rational Rational approximation 1`] = `
box       = ["Rational", 2.5]
evaluate  = ["Rational", 5, 2]
N-auto    = 2.5
`;

exports[`Rational Rational approximation 2`] = `
box       = ["Rational", "Pi"]
evaluate  = ["Rational", 80143857, 25510582]
N-auto    = 3.1415926535897932385
N-mach    = 3.141592653589793
`;

exports[`Rational Rational as Divide 1`] = `
box       = ["Divide", 3.1, 2.8]
evaluate  = 1.1071428571428571429
eval-mach = 1.1071428571428572
`;

exports[`Root Root 2.5 1`] = `1.3572088082974532443`;

exports[`Root Root 5/7 1`] = `0.89390353509656766727`;

exports[`Root Root 1234567890987654321 1`] = `["Root", "1234567890987654321", 3]`;

exports[`Root Root 1234567890987654321.123456789 1`] = `1072765.9799271567916`;

exports[`Sqrt INVALID  Sqrt 1`] = `
box       = ["Sqrt", 2.5, -1.1, 18.4]
canonical = [
  "Sqrt",
  2.5,
  ["Error", "'unexpected-argument'", -1.1],
  ["Error", "'unexpected-argument'", 18.4]
]
`;

exports[`Sqrt INVALID Sqrt 1`] = `
box       = ["Sqrt", 2.5, 1.1]
canonical = ["Sqrt", 2.5, ["Error", "'unexpected-argument'", 1.1]]
`;

exports[`Sqrt √(3+4i) 1`] = `
box       = ["Sqrt", ["Complex", 3, 4]]
evaluate  = ["Complex", 2, 1]
N-big     = {num: "NaN"}
`;

exports[`Sqrt √(3^2) 1`] = `
box       = ["Sqrt", ["Square", 3]]
canonical = 3
`;

exports[`Sqrt √(4x) 1`] = `
box       = ["Sqrt", ["Multiply", 4, "x"]]
simplify  = ["Multiply", 2, ["Sqrt", "x"]]
`;

exports[`Sqrt √(5/7) 1`] = `
box       = ["Sqrt", ["Rational", 5, 7]]
N-auto    = 0.84515425472851657751
N-mach    = 0.8451542547285166
`;

exports[`Sqrt √(5x(3+2)) 1`] = `
box       = ["Sqrt", ["Multiply", 5, ["Add", 3, 2]]]
canonical = ["Sqrt", ["Multiply", 5, ["Add", 2, 3]]]
simplify  = 5
`;

exports[`Sqrt √(175) 1`] = `
box       = ["Sqrt", 175]
canonical = ["Multiply", ["Sqrt", 7], 5]
N-auto    = 13.228756555322952953
N-mach    = 13.228756555322953
`;

exports[`Sqrt √(1000000/49) 1`] = `
box       = ["Sqrt", ["Rational", 1000000, 49]]
simplify  = ["Rational", 1000, 7]
N-auto    = 142.85714285714285714
N-mach    = 142.85714285714286
`;

exports[`Sqrt √(1000001/7) 1`] = `
box       = ["Sqrt", ["Rational", 1000001, 7]]
N-auto    = 377.96466199141648629
N-mach    = 377.9646619914165
`;

exports[`Sqrt √(12345678901234567890/23456789012345678901) 1`] = `
box       = ["Sqrt", ["Rational", "12345678901234567890", "23456789012345678901"]]
canonical = ["Sqrt", ["Rational", 137174210, 260630989]]
N-auto    = 0.7254762640277013131
N-mach    = 0.7254762640277013
`;

exports[`Sqrt √(12345670000000000000000000) 1`] = `
box       = ["Sqrt", 1.234567e+25]
simplify  = ["Multiply", 1000000000, ["Sqrt", 12345670]]
evaluate  = ["Multiply", 1000000000, ["Sqrt", 12345670]]
N-auto    = 3513640562152.025248
eval-mach = ["Sqrt", 1.234567e+25]
N-mach    = 3513640562152.0254
`;

exports[`Sqrt √0 1`] = `
box       = ["Sqrt", 0]
canonical = 0
`;

exports[`Sqrt √2.5 1`] = `
box       = ["Sqrt", 2.5]
evaluate  = 1.581138830084189666
eval-mach = 1.5811388300841898
`;

exports[`Sqrt √123456789.01234567890 1`] = `
box       = ["Sqrt", "123456789.0123456789"]
evaluate  = 11111.111061111110994
N-mach    = 11111.11106111111
`;

exports[`Sqrt √12345678901234567890 1`] = `
box       = ["Sqrt", "12345678901234567890"]
simplify  = ["Multiply", 3, ["Sqrt", "1371742100137174210"]]
N-auto    = 3513641828.8201442531
N-mach    = 3513641828.820144
`;

exports[`Square INVALID Square 1`] = `
box       = ["Square", 2.5, 1.1]
canonical = ["Square", 2.5, ["Error", "'unexpected-argument'", 1.1]]
`;

exports[`Square INVALID Square 2`] = `
box       = ["Square", 2.5, -1.1, 18.4]
canonical = [
  "Square",
  2.5,
  ["Error", "'unexpected-argument'", -1.1],
  ["Error", "'unexpected-argument'", 18.4]
]
`;

exports[`Square Square 1`] = `
box       = ["Square", 2.5]
evaluate  = 6.25
`;

exports[`Subtract INVALID Subtract 1`] = `["Subtract", 2.5, -1.1, ["Error", "'unexpected-argument'", 18.4]]`;

exports[`Subtract Subtract 1`] = `-2.5`;

exports[`Subtract Subtract 2`] = `1.4`;
